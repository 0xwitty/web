// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Chainflip Broker as a Service
 * Run your own Chainflip Broker without any hassle.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ChainflipBaasStatusCcmParameters
 */
export interface ChainflipBaasStatusCcmParameters {
    /**
     * 
     * @type {string}
     * @memberof ChainflipBaasStatusCcmParameters
     */
    readonly gasBudget?: string;
    /**
     * 
     * @type {string}
     * @memberof ChainflipBaasStatusCcmParameters
     */
    readonly message?: string;
    /**
     * 
     * @type {string}
     * @memberof ChainflipBaasStatusCcmParameters
     */
    readonly cfParameters?: string | null;
}

/**
 * Check if a given object implements the ChainflipBaasStatusCcmParameters interface.
 */
export function instanceOfChainflipBaasStatusCcmParameters(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ChainflipBaasStatusCcmParametersFromJSON(json: any): ChainflipBaasStatusCcmParameters {
    return ChainflipBaasStatusCcmParametersFromJSONTyped(json, false);
}

export function ChainflipBaasStatusCcmParametersFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChainflipBaasStatusCcmParameters {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'gasBudget': !exists(json, 'gasBudget') ? undefined : json['gasBudget'],
        'message': !exists(json, 'message') ? undefined : json['message'],
        'cfParameters': !exists(json, 'cfParameters') ? undefined : json['cfParameters'],
    };
}

export function ChainflipBaasStatusCcmParametersToJSON(value?: ChainflipBaasStatusCcmParameters | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
    };
}

