// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Chainflip Broker as a Service
 * Run your own Chainflip Broker without any hassle.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ChainflipBaasAssetsAssetInfo } from './ChainflipBaasAssetsAssetInfo';
import {
    ChainflipBaasAssetsAssetInfoFromJSON,
    ChainflipBaasAssetsAssetInfoFromJSONTyped,
    ChainflipBaasAssetsAssetInfoToJSON,
} from './ChainflipBaasAssetsAssetInfo';

/**
 * 
 * @export
 * @interface ChainflipBaasAssetsAssetsResponse
 */
export interface ChainflipBaasAssetsAssetsResponse {
    /**
     * All available assets.
     * @type {Array<ChainflipBaasAssetsAssetInfo>}
     * @memberof ChainflipBaasAssetsAssetsResponse
     */
    readonly assets?: Array<ChainflipBaasAssetsAssetInfo>;
}

/**
 * Check if a given object implements the ChainflipBaasAssetsAssetsResponse interface.
 */
export function instanceOfChainflipBaasAssetsAssetsResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ChainflipBaasAssetsAssetsResponseFromJSON(json: any): ChainflipBaasAssetsAssetsResponse {
    return ChainflipBaasAssetsAssetsResponseFromJSONTyped(json, false);
}

export function ChainflipBaasAssetsAssetsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChainflipBaasAssetsAssetsResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'assets': !exists(json, 'assets') ? undefined : ((json['assets'] as Array<any>).map(ChainflipBaasAssetsAssetInfoFromJSON)),
    };
}

export function ChainflipBaasAssetsAssetsResponseToJSON(value?: ChainflipBaasAssetsAssetsResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
    };
}

