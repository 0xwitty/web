// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Chainflip Broker as a Service
 * Run your own Chainflip Broker without any hassle.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ChainflipBaasNetworksNetworkInfo
 */
export interface ChainflipBaasNetworksNetworkInfo {
    /**
     * Network id.
     * @type {string}
     * @memberof ChainflipBaasNetworksNetworkInfo
     */
    readonly id?: string;
    /**
     * Network name.
     * @type {string}
     * @memberof ChainflipBaasNetworksNetworkInfo
     */
    readonly name?: string;
    /**
     * A url to the logo for the network.
     * @type {string}
     * @memberof ChainflipBaasNetworksNetworkInfo
     */
    readonly logo?: string;
}

/**
 * Check if a given object implements the ChainflipBaasNetworksNetworkInfo interface.
 */
export function instanceOfChainflipBaasNetworksNetworkInfo(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ChainflipBaasNetworksNetworkInfoFromJSON(json: any): ChainflipBaasNetworksNetworkInfo {
    return ChainflipBaasNetworksNetworkInfoFromJSONTyped(json, false);
}

export function ChainflipBaasNetworksNetworkInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChainflipBaasNetworksNetworkInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'logo': !exists(json, 'logo') ? undefined : json['logo'],
    };
}

export function ChainflipBaasNetworksNetworkInfoToJSON(value?: ChainflipBaasNetworksNetworkInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
    };
}

