// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Chainflip Broker as a Service
 * Run your own Chainflip Broker without any hassle.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ChainflipBaasRpcRpcRequest
 */
export interface ChainflipBaasRpcRpcRequest {
    /**
     * Hardcode "1"
     * @type {number}
     * @memberof ChainflipBaasRpcRpcRequest
     */
    id: number;
    /**
     * Hardcode "2.0"
     * @type {string}
     * @memberof ChainflipBaasRpcRpcRequest
     */
    jsonrpc: string;
    /**
     * Hardcode "broker_request_swap_deposit_address"
     * @type {string}
     * @memberof ChainflipBaasRpcRpcRequest
     */
    method: string;
    /**
     * source_asset: Source asset.
     * 
     * destination_asset: Egress asset.
     * 
     * destination_address: Egress Address.
     * 
     * broker_commission: Will be ignored and configured partner commission will be used.
     * 
     * channel_metadata: (Optional) Cross-chain message metadata as a JSON object: {"gas_budget": &lt;amount&gt;, "message":&lt;hex_string&gt;, "cf_parameters": &lt;hex_string&gt;}. Where message and cf_parameters are hex encoded strings.
     * 
     * boost_fee: (Optional) Maximum accepted boost fee in basis points (100th of a percent).
     * @type {Array<any>}
     * @memberof ChainflipBaasRpcRpcRequest
     */
    params: Array<any>;
}

/**
 * Check if a given object implements the ChainflipBaasRpcRpcRequest interface.
 */
export function instanceOfChainflipBaasRpcRpcRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "jsonrpc" in value;
    isInstance = isInstance && "method" in value;
    isInstance = isInstance && "params" in value;

    return isInstance;
}

export function ChainflipBaasRpcRpcRequestFromJSON(json: any): ChainflipBaasRpcRpcRequest {
    return ChainflipBaasRpcRpcRequestFromJSONTyped(json, false);
}

export function ChainflipBaasRpcRpcRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChainflipBaasRpcRpcRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'jsonrpc': json['jsonrpc'],
        'method': json['method'],
        'params': json['params'],
    };
}

export function ChainflipBaasRpcRpcRequestToJSON(value?: ChainflipBaasRpcRpcRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'jsonrpc': value.jsonrpc,
        'method': value.method,
        'params': value.params,
    };
}

